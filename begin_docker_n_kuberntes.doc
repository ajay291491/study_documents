#---------------------------------------------------------------------------------------------
#  Chapter 01 - Introduction Docker
#---------------------------------------------------------------------------------------------
# * Install Docker
# You can install Docker by install below two packages 
# | 
# | [root@dockerstation01 ~]# rpm -qa| grep -i docker
# | [root@dockerstation01 ~]# rpm -qa| grep -i docker
# | docker-ce-cli-18.09.6-3.el7.x86_64
# | docker-ce-18.09.1-3.el7.x86_64
# | [root@dockerstation01 ~]#
# | 
#
# * Verify the installation 
# You can verify the instllation of docker server and client by running below command 
# | 
# | [root@dockerstation01 ~]# docker version
# | Client:
# |  Version:           18.09.6
# |  API version:       1.39
# |  Go version:        go1.10.8
# |  Git commit:        481bc77156
# |  Built:             Sat May  4 02:34:58 2019
# |  OS/Arch:           linux/amd64
# |  Experimental:      false
# |
# | Server: Docker Engine - Community
# |  Engine:
# |   Version:          18.09.1
# |   API version:      1.39 (minimum version 1.12)
# |   Go version:       go1.10.6
# |   Git commit:       4c52b90
# |   Built:            Wed Jan  9 19:06:30 2019
# |   OS/Arch:          linux/amd64
# |   Experimental:     false
# | [root@dockerstation01 ~]#
# |
#
# * How to start a container 
# To start a container you will need to run the 'docker run' command. When you start a container there are few steps happens in the background 
#
# Syntax : docker run <image_name>
#
# Below are few steps which is outlined in the chronological order while running a docker run command 
#
# 1. When you run the command docker client contacts the docker server for image location
# 2. Then Docker server verifies the image in its cache, if its available it helps to start the image from the cache
# 3. Incase there is no cache available then it forwards the requst to container image repository "Docker Hub'
# 4. It checks for the image in the docker hub and then pulls that image int0 local repository or cache 
# 5. Then docker client will start the container from the image which has downloaded.
#
# Example : Below is an example to start a 'hello-world' program. 
#
# | [root@dockerstation01 ~]# docker run hello-world
# |
# | Hello from Docker!
# | This message shows that your installation appears to be working correctly.
# |
# | To generate this message, Docker took the following steps:
# |  1. The Docker client contacted the Docker daemon.
# |  2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
# |     (amd64)
# |  3. The Docker daemon created a new container from that image which runs the
# |     executable that produces the output you are currently reading.
# |  4. The Docker daemon streamed that output to the Docker client, which sent it
# |     to your terminal.
# |
# | To try something more ambitious, you can run an Ubuntu container with:
# |  $ docker run -it ubuntu bash
# |
# | Share images, automate workflows, and more with a free Docker ID:
# |  https://hub.docker.com/
# |
# | For more examples and ideas, visit:
# |  https://docs.docker.com/get-started/
# |
# | [root@dockerstation01 ~]#
# |
#
#...........................................................................................................
# NOTE : Below tutorial will explain about how docker run works
# https://www.udemy.com/docker-and-kubernetes-the-complete-guide/learn/lecture/11436626?start=79#bookmarks
#...........................................................................................................
